import {
  Heading,
  Box,
  Link,
  Flex,
  Spacer,
  useColorMode,
  Button,
  Menu,
  MenuButton,
  MenuList,
  MenuItem,
  Stack,
} from '@chakra-ui/react';
import { useRouter } from 'next/router';
import useTranslation from 'next-translate/useTranslation';
import { default as NextLink } from 'next/link';
import { MoonIcon, SunIcon, ChevronDownIcon } from '@chakra-ui/icons';
import setLanguage from 'next-translate/setLanguage';
import Footer from '@/components/Footer';
import Head from 'next/head';
import styles from '@/styles/Home.module.css';
// import {Profile} from '@/components/wallet/profile';
import { useAccount, useNetwork } from 'wagmi';
import { avalancheFuji } from 'wagmi/chains';

interface LayoutProps {
  children: React.ReactNode;
}

const Layout = ({ children }: LayoutProps) => {
  const { address, connector, isConnected } = useAccount();
  const { chain } = useNetwork();
  const router = useRouter();
  const { t, lang } = useTranslation('common');
  const { colorMode, toggleColorMode } = useColorMode();
  return (
    <>
      <Head>
        <title>{t('layout.nav.HEADING')}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {/*<SwitchNetworkAlert />*/}
      {/*<MetaMaskLeadBanner />*/}
      <Box p='4' bg={isConnected ? '#88ff8811' : '#ff888811'}>
        <Flex>
          <Box p={2}>
            <Link as={NextLink} href='/' locale={router.locale}>
              <Heading size='md'>
                <pre>{t('layout.nav.HEADING')}</pre>
              </Heading>
            </Link>
          </Box>
          <Spacer />
          <Stack alignItems={'center'} direction='row' spacing={4}>
            <Link as={NextLink} _focus={{ boxShadow: 'none' }} href='/' p={4}>
              {t('layout.nav.HOME')}
            </Link>
            <Link as={NextLink} href={'/quests'} _focus={{ boxShadow: 'none' }} p={4}>
              {t('layout.nav.QUESTS')}
            </Link>
            <Link as={NextLink} href={'/admin'} _focus={{ boxShadow: 'none' }} p={4}>
              {t('layout.nav.ADMIN')}
            </Link>
            <Menu>
              <MenuButton
                colorScheme={
                  isConnected && chain?.id == avalancheFuji.id
                    ? 'green'
                    : isConnected
                      ? 'orange'
                      : 'red'
                }
                as={Button}
                rightIcon={<ChevronDownIcon />}
              >
                {isConnected ? `Connected to ${chain?.name}` : t('layout.nav.WALLET__NOT_CONNECTED')}
                {/*{t('TOOL_LINK')}*/}
              </MenuButton>
              <MenuList>
                <MenuItem>
                  <NextLink href='/wallet'>{t('layout.nav.WALLET__SETTINGS')}</NextLink>
                </MenuItem>
                {/*<Profile />*/}
                {/*<MenuItem>*/}
                {/*  /!*<Link href="/koukan">*!/*/}
                {/*  {t('EXCHANGE_LINK')}*/}
                {/*  /!*</Link>*!/*/}
                {/*</MenuItem>*/}
              </MenuList>
            </Menu>
            <Button size='md' onClick={toggleColorMode} p={4}>
              {colorMode == 'dark' ? <SunIcon /> : <MoonIcon />}
            </Button>
            <Button size='md' onClick={async () => await setLanguage(lang == 'en' ? 'ja' : 'en')}>
              {lang == 'en' ? '日本' : 'En'}
            </Button>
          </Stack>
        </Flex>
      </Box>
      <Box p={5}>{children}</Box>
      <Footer />
    </>
  );
};

export default Layout;
